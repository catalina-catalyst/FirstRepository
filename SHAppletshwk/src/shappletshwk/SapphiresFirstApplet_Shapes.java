/*
Sapphire Haeward
CISB 375
JAVA Applets Homework
 */
package shappletshwk;

/**
 *
 * @author sapphirehaeward
 */
import java.awt.* ;
import javax.swing.JOptionPane;

public class SapphiresFirstApplet_Shapes extends javax.swing.JApplet {

    /**
     * Initializes the applet SapphiresFirstApplet_Shapes
     */
   
    int mycount ;
    Color pickColor;
    Shape pickShape;
    
    @Override
    public void init() {
        
        /*
        this.jComboColors.addItem("Red");
        this.jComboColors.addItem("Blue");
        this.jComboColors.addItem("Green");
        this.jComboColors.addItem("Yellow");
        this.jComboColors.addItem("Pink");
        this.jComboColors.addItem("Black");
        this.jComboColors.addItem("Cyan");
        this.jComboColors.addItem("Magenta");
        */

        //String input = JOptionPane.showInputDialog("enter num of figures");
        //mycount = Integer.parseInt(input);
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SapphiresFirstApplet_Shapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SapphiresFirstApplet_Shapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SapphiresFirstApplet_Shapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SapphiresFirstApplet_Shapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jNumText = new javax.swing.JTextField();
        OK = new javax.swing.JButton();
        jComboColors = new javax.swing.JComboBox<>();
        jComboShape = new javax.swing.JComboBox<>();

        OK.setText("OK");
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        jComboColors.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Red", "Green", "Blue", "Black", "Yellow", "Pink", "Cyan", "Magenta" }));

        jComboShape.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Circle", "Oval", "Rectangle", "Square" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(395, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboShape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OK)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jNumText, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jComboColors, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboColors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jComboShape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                .addComponent(OK)
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        // TODO add your handling code here:
        mycount = Integer.parseInt(jNumText.getText());
        String combo = jComboColors.getSelectedItem().toString();
        if(combo == "Red")
        {pickColor = Color.RED;}
        else if(combo == "Green")
        {pickColor = Color.GREEN;}
        else if (combo == "Blue")
        {pickColor = Color.BLUE;}
        else if (combo == "Black")
        {pickColor = Color.BLACK;}        
        else if (combo == "Yellow")
        {pickColor = Color.YELLOW;}
        else if (combo == "Pink")
        {pickColor = Color.PINK;}
        else if (combo == "Cyan")
        {pickColor = Color.CYAN;}
        else 
        {pickColor = Color.MAGENTA;}
        
        
        
        
        repaint ();
    }//GEN-LAST:event_OKActionPerformed
public void paint(Graphics graphic1)    
{    
 int i = 5;   
 graphic1.setColor(pickColor) ;  
 int count = 0;
 
 
 String shape = jComboShape.getSelectedItem().toString();
 //Circle
 if (shape =="Circle")
 {
  while(count<=mycount)    
{
 graphic1.drawOval(i, i, i, i);
 count++;
 i+=5;
}
 
 }
      
 //Oval
 else if (shape =="Oval")
 {  
  while(count<=mycount)    
{   
 
 graphic1.drawOval(i, i, i, 2*i);
 count++;
 i+=5;
}
 }
 
//Rectangle 
else if (shape =="Rectangle")
 {   
     while(count<=mycount)    
{   
 graphic1.drawRect(i, i, i, 2*i);
 count++;
 i+=5;
}
 }

//Square
else 
{
 while(count<=mycount)    
{   
 graphic1.drawRect(i, i, i, i);
 count++;
 i+=5;
}

}

 
 

}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OK;
    private javax.swing.JComboBox<String> jComboColors;
    private javax.swing.JComboBox<String> jComboShape;
    private javax.swing.JTextField jNumText;
    // End of variables declaration//GEN-END:variables
}
